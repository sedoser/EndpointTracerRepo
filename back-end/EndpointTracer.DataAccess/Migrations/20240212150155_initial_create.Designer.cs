// <auto-generated />
using System;
using EndpointTracer.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EndpointTracer.DataAccess.Migrations
{
    [DbContext(typeof(EndpointTracerContext))]
    [Migration("20240212150155_initial_create")]
    partial class initial_create
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EndpointTracer.Model.Certificate", b =>
                {
                    b.Property<int>("CertificateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CertificateId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExternalDpId")
                        .HasColumnType("int");

                    b.Property<string>("Pem")
                        .IsRequired()
                        .HasColumnType("varchar(3000)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("CertificateId");

                    b.HasIndex("ExternalDpId");

                    b.ToTable("Certificates");
                });

            modelBuilder.Entity("EndpointTracer.Model.Entities.EndpointAddress", b =>
                {
                    b.Property<int>("EndpointAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EndpointAddressId"));

                    b.Property<string>("Datapower")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Endpoint")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Env")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("ExternalDpId")
                        .HasColumnType("int");

                    b.HasKey("EndpointAddressId");

                    b.HasIndex("ExternalDpId");

                    b.ToTable("EndpointAddresses");
                });

            modelBuilder.Entity("EndpointTracer.Model.Entities.ExternalDp", b =>
                {
                    b.Property<int>("ExternalDpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExternalDpId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("DpName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ManagementUrl")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("ExternalDpId");

                    b.ToTable("ExternalDps");
                });

            modelBuilder.Entity("EndpointTracer.Model.Certificate", b =>
                {
                    b.HasOne("EndpointTracer.Model.Entities.ExternalDp", "ExternalDp")
                        .WithMany("Certificates")
                        .HasForeignKey("ExternalDpId");

                    b.Navigation("ExternalDp");
                });

            modelBuilder.Entity("EndpointTracer.Model.Entities.EndpointAddress", b =>
                {
                    b.HasOne("EndpointTracer.Model.Entities.ExternalDp", "ExternalDp")
                        .WithMany("EndpointAddresses")
                        .HasForeignKey("ExternalDpId");

                    b.Navigation("ExternalDp");
                });

            modelBuilder.Entity("EndpointTracer.Model.Entities.ExternalDp", b =>
                {
                    b.Navigation("Certificates");

                    b.Navigation("EndpointAddresses");
                });
#pragma warning restore 612, 618
        }
    }
}
